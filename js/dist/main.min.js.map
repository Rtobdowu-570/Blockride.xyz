{"version":3,"sources":["main.js"],"names":["menuBtn","document","querySelector","show","e","preventDefault","toggle","mainMenu","classList","innerHTML","createElement","li","appendChild","contains","body","style","overflow","addEventListener","rootMargin","threshold","observer","entry","target","entries","forEach","isIntersecting","observerOptions","add","element","toLocaleString","arguments","length","undefined","progress","performance","now","requestAnimationFrame","updateCounter","currentTime","elapsed","startTime","Math","min","duration","current","floor","textContent","counterObserver","querySelectorAll","el","observe","rect","getBoundingClientRect","size","x","clientX","left","clientY","top","width","ripple","height","setTimeout","remove","y","scrolled","window","parallaxElements","pageYOffset","dataset","speed","yPos","transform","concat","anchor","this","getAttribute","block","loader","opacity","start","unobserve","counter","text","parseInt","replace"],"mappings":"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","file":"main.min.js","sourcesContent":["\n// Display main-menu:\nconst menuBtn = document.querySelector('.menu-btn');\nconst mainMenu = document.querySelector('.main-menu');\n\nmenuBtn.addEventListener('click', show);\nfunction show(e) {\n    e.preventDefault();\n    mainMenu.classList.toggle('show');\n    menuBtn.classList.toggle('active');\n\n\n    // Adding right menu to the main menu \n    const li = document.createElement('li');\n    li.innerHTML = `<a href=\"#\">Connect Wallet</a>`;\n    li.classList.add('main-menu');\n    mainMenu.appendChild(li);\n\n    // Prevent scrolling when main-menu is shown\n    if (mainMenu.classList.contains('show')) {\n        document.body.style.overflow = 'hidden';\n    } else {\n        document.body.style.overflow = 'block';\n    }\n};\n   \n\n// Scroll Animation Observer\nconst observerOptions = {\n    threshold: 0.1,\n    rootMargin: '0px 0px -50px 0px'\n};\n\nconst observer = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            entry.target.classList.add('visible');\n        }\n    });\n}, observerOptions);\n\n// Observe all animation elements\ndocument.addEventListener('DOMContentLoaded', () => {\n    const animatedElements = document.querySelectorAll('.fade-in, .slide-in-left, .slide-in-right');\n    animatedElements.forEach(el => observer.observe(el));\n});\n\n// Button Ripple Effect\ndocument.addEventListener('click', (e) => {\n    if (e.target.classList.contains('btn-ripple')) {\n        const ripple = document.createElement('span');\n        const rect = e.target.getBoundingClientRect();\n        const size = Math.max(rect.width, rect.height);\n        const x = e.clientX - rect.left - size / 2;\n        const y = e.clientY - rect.top - size / 2;\n        \n        ripple.style.width = ripple.style.height = size + 'px';\n        ripple.style.left = x + 'px';\n        ripple.style.top = y + 'px';\n        ripple.classList.add('ripple');\n        \n        e.target.appendChild(ripple);\n        \n        setTimeout(() => {\n            ripple.remove();\n        }, 600);\n    }\n});\n\n// Parallax Effect\nwindow.addEventListener('scroll', () => {\n    const scrolled = window.pageYOffset;\n    const parallaxElements = document.querySelectorAll('.parallax');\n    \n    parallaxElements.forEach(element => {\n        const speed = element.dataset.speed || 0.5;\n        const yPos = -(scrolled * speed);\n        element.style.transform = `translateY(${yPos}px)`;\n    });\n});\n\n// Smooth Scroll for anchor links\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n    anchor.addEventListener('click', function (e) {\n        e.preventDefault();\n        const target = document.querySelector(this.getAttribute('href'));\n        if (target) {\n            target.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start'\n            });\n        }\n    });\n});\n\n// Loading Animation\nwindow.addEventListener('load', () => {\n    const loader = document.querySelector('.loader');\n    if (loader) {\n        loader.style.opacity = '0';\n        setTimeout(() => {\n            loader.style.display = 'none';\n        }, 500);\n    }\n});\n\n// Counter Animation\nfunction animateCounter(element, target, duration = 2000) {\n    const start = 0;\n    const startTime = performance.now();\n    \n    function updateCounter(currentTime) {\n        const elapsed = currentTime - startTime;\n        const progress = Math.min(elapsed / duration, 1);\n        \n        const current = Math.floor(progress * target);\n        element.textContent = current.toLocaleString();\n        \n        if (progress < 1) {\n            requestAnimationFrame(updateCounter);\n        }\n    }\n    \n    requestAnimationFrame(updateCounter);\n}\n\n// Animate counters when they come into view\nconst counterObserver = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            const counter = entry.target;\n            const text = counter.textContent;\n            const target = parseInt(text.replace(/[^0-9]/g, ''));\n            \n            if (target) {\n                animateCounter(counter, target);\n                counterObserver.unobserve(counter);\n            }\n        }\n    });\n}, { threshold: 0.5 });\n\n// Observe counter elements\ndocument.addEventListener('DOMContentLoaded', () => {\n    const counters = document.querySelectorAll('.frame-text h1');\n    counters.forEach(counter => counterObserver.observe(counter));\n});"]}